// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonModelMessage.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using scg = global::System.Collections.Generic;
namespace ETHotfix {

  #region Messages
  public partial class RoleInfo : pb::IMessage {
    private static readonly pb::MessageParser<RoleInfo> _parser = new pb::MessageParser<RoleInfo>(() => (RoleInfo)MessagePool.Instance.Fetch(typeof(RoleInfo)));
    public static pb::MessageParser<RoleInfo> Parser { get { return _parser; } }

    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private long userid_;
    public long Userid {
      get { return userid_; }
      set {
        userid_ = value;
      }
    }

    private long createtime_;
    public long Createtime {
      get { return createtime_; }
      set {
        createtime_ = value;
      }
    }

    private long logindaycount_;
    public long Logindaycount {
      get { return logindaycount_; }
      set {
        logindaycount_ = value;
      }
    }

    private long lastlogintime_;
    public long Lastlogintime {
      get { return lastlogintime_; }
      set {
        lastlogintime_ = value;
      }
    }

    private long level_;
    public long Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Userid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Userid);
      }
      if (Createtime != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Createtime);
      }
      if (Logindaycount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Logindaycount);
      }
      if (Lastlogintime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Lastlogintime);
      }
      if (Level != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Level);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Userid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Userid);
      }
      if (Createtime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Createtime);
      }
      if (Logindaycount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Logindaycount);
      }
      if (Lastlogintime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Lastlogintime);
      }
      if (Level != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Level);
      }
      return size;
    }

    public void MergeFrom(pb::CodedInputStream input) {
      name_ = "";
      userid_ = 0;
      createtime_ = 0;
      logindaycount_ = 0;
      lastlogintime_ = 0;
      level_ = 0;
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Userid = input.ReadInt64();
            break;
          }
          case 24: {
            Createtime = input.ReadInt64();
            break;
          }
          case 32: {
            Logindaycount = input.ReadInt64();
            break;
          }
          case 40: {
            Lastlogintime = input.ReadInt64();
            break;
          }
          case 48: {
            Level = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
